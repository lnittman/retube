// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  grids     Grid[]
}

model Grid {
  id          String   @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  videos      Video[]
  tags        Tag[]    @relation("GridToTag")
}

model Video {
  id           String      @id @default(cuid())
  title        String
  description  String?
  url          String
  thumbnailUrl String?
  platform     String      // "youtube", "instagram", "tiktok", etc.
  externalId   String      // Platform-specific ID
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  gridId       String
  grid         Grid        @relation(fields: [gridId], references: [id], onDelete: Cascade)
  metadata     Json?       // AI-derived metadata
  attributes   Attribute[]
}

model Attribute {
  id      String @id @default(cuid())
  key     String // color, subject, theme, etc.
  value   String
  videoId String
  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([videoId, key, value])
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  grids     Grid[]   @relation("GridToTag")
}
